// var a = 5;
// console.log(a);

// var a = "hello";
// console.log(a);
// a ="world"; console.log(a);

// let b = 10;
// console.log(b);

// let c = 15;
// c = 20;
// console.log(c);

// const subject = "JavaScript";
// console.log(subject);

// let topic = "Iam Learning JavaScript";
// console.log(topic);

// // topic = "this is an Error"
// // console.error(topic);

// // topic ="This is a Warning"
// // console.warn(topic);

// // topic ="Welcome"
// // alert(topic);

// // topic = prompt("Enter your User name")
// // console.log(topic);

// let d = 25;
// console.log(typeof(d));

// d = "Hello"
// console.log(typeof(d));

// d = true;
// console.log(typeof(d));

// let e;
// console.log(typeof(e));

// topic = prompt("Enter email");
// console.log(topic);

// console.clear();

//JS


    // What is an array in JavaScript? Provide an example from the code.

   //  let Fruits =["apple","berry","orange","pome"];


    //Whatwill console.log(fruit[0]) output if fruit = ["apple","berry","orange","pome"]?

   //  console.log(Fruits[0]);


    // What will console.log(fruit[fruit.length-1]) output for the fruit array?

   //   console.log(Fruits[Fruits.length-1]); 


     // How do you access the last element of an array using its length property?

   //   console.log(Fruits[Fruits.length-1]);


     // What is an object in JavaScript? Provide an example from the code.
     
   //   let Bike = {
   //      Bajaj: "Black",
   //      Suzuki : "Red", 
   //      Hero : "Blue"
   //   }

     // Whatwill console.log(Bike.Suzuki) output if Bike = { Bajaj: "Black", Suzuki : "Red", Hero : "Blue" }

   //   console.log(Bike.Suzuki);

     //How do you access the Hero property from the Bike object?

   //   console.log(Bike.Hero);

     //What does the + operator do in JavaScript? Show an example from the code.

   //   let CashPrize= 100;
   //   let Salary = 500;

   //   let total = CashPrize + Salary;

   //   console.log(total);

     // What is the result of console.log(1-2) based on the code?

   //   CashPrize = total-Salary;

   //   console.log(CashPrize);

     //What does the ** operator do? What will console.log(3**2) output?

   //   let Number = 200;
   //   let SquareRoot = Number**2;
   //   console.log(SquareRoot);

     //What is the difference between post-increment (x++) and pre-increment (++x)?

   //   let x = 20;
   //   let y = ++x;

   //   console.log(y);
     
   //   let a = 25;
   //   let z = a++ + ++a;

   //   console.log(z);

      //What will let num = 10; num = ++num; console.log(num); output?
      //Answer 11
      // let num = 10;
      // num = ++num;

      // console.log(num);

      //In the code let num1 = 10; let num2 = num1++; console.log(num2);, what is the value of num2?
      //answer 10

      // let Num1 = 10;
      // let Num2 = Num1++;
      // console.log(Num2);

      //What does the += assignment operator do? Show an example from the code.

      // let ramesh = 500;
      // let suresh = 600
      
      // ramesh += suresh;
      
      // console.log(ramesh);

      // What will let age1 = 20; age1 += 20; console.log(age1); output?
      //answer 40

      // let age1 = 20;
      // age1 += 20;
      
      // console.log(age1);

      //What is the difference between == and === operators in JavaScript?
      // == Compare only Values with Values
      //=== Compare Both Values and its Datatype

      //What will console.log(5==="5") output?
      // Answer False
      
      // console.log(5==="5");

      //What does the logical AND (&&) operator do? Provide an example.

      // Logical && operators compare the Two Two Statements.
      // if both are true it becomes True
      // If one statement Faild It becomes False

      // What will console.log((5>=5) && !(5=="5")) output?
      // Answer False

      // console.log((5>=5) && !(5=="5"));

      // What will console.log((5!="5") || !(5!=5)) output?
      //Answer True
      // console.log((5!="5") || !(5!=5));

      console.clear();

      //1) Write a JavaScript program to concatenate three strings ”Welcome”, ”to”,
      //and ”JavaScript” with spaces between them and log the result.

      // let a = "welcome"
      // let b = "to"
      // let c = "Javascript"

      // let d = a + b +c ; 
      // console.log(d);
      
      // let d = `${a} ${b} ${c}`;
      // console.log(d);
      // console.log(typeof(d));
      
     // 2. Create a string by concatenating a variablename = ”Alice” with the string
     // ” loves coding”and log the output.

      // let name = "Alice"
      // let hobby = "loves Coding"

      // let favorite = `${name} ${hobby}`;

      // console.log(favorite);

      //3. Combine two strings ”JavaScript” and ”is fun” using the + operator
      //and add anexclamation mark at the end.

      // let subject = "JavaScript";
      // let reaction= "is fun";

      // let output = subject +" "+ reaction +"!";

      // console.log(output);


      //4.Write a program to concatenate a number 42 with the string ” is the
       // answer” and log the result.

      // let num = 42;
      // let result = num +" "+"is the answer";

      // console.log(result);

      //5. Using template literals, create a string that includes variables num1 = 10
      //and num2 = 20 in the format ” Sum: 10 + 20 = 30”.

      // let num1 = 10;
      // let num2 = 20;

      //  let num3 = 10+20;

      // let sum = `sum:${num1}+${num2}=${num1+num2}`;

      // console.log(sum)

      //6. Write a template string to display ”Area of rectangle: 50” using vari
      //ables length = 10andwidth = 5

      // let len = 10;
      // let wid = 5;

      // let ans = `Area of Rectangle : ${len*wid}`;

      // console.log(ans);

      //7. Create a template string that includes a variable user = ”Bob” in the //
      //sentence ”Hello, Bob! Welcome back.”.

      // let user = "Bob"

      // let sentence= `Hello, ${user}! Welcome Back `


      // console.log(sentence);

      //8. Use a template literal to log the result of num1 * num2 where num1 = 15
      //and num2 = 3.

      // let num4 =15
      // let num5 =3

      // let ans1=`${num4*num5}`;

      // console.log(ans1);

      //9. Predict the output and type of ”5” + 10. Explain why.
      //Solu:
       //   output = 510 type = String
        //  explanation- anything with a String is String

      // let x = "5"
      // let y = 10;

      // let z = x+y; 
      // console.log(z);
      // console.log(typeof(z));

      //10. What is the result of true + ”10”? Log the type and value.
      //Solu:
      // let s = true
      // let t = "10"
      // let str = s+t;

      // console.log(str);
      // console.log(typeof(str));
      
      //11. Write a program to explicitly convert the string ”123” to a number and
      //add 50 to it.

      // let m = "123"
      // let n = 50

      // let o = m + n;

      // console.log(o);
      
      //Determine the output of Boolean(”hello”) and Boolean(””). Explain
      //the difference.

      //Solu: Boolean(”hello”)- True
           //Boolean(””)- false

      console.log(Boolean("hello"));
      console.log(Boolean(""));

      //13. Write an if statement to check if a variable age = 18 is greater than or
     // equal to 18 and log ”Adult” if true.

      let age= 45
      
      if(age>=18){ 
         console.log("Adult");
      };

      //14. Create an if-else statement to check if a number num = 25 is even or 
      //odd and log the result.

      let digit = 25;

      if (digit%2==0) {
         console.log("even");
       }
      
      else{
         console.log("odd")

         }
      //15. Write an if-else-if statement to categorize a variable score = 85 into
      //grades: A (90+), B (80-89), C (70-79), or Fail (below 70).

      let marks = 85

      if(marks>90){
         console.log("Grade A");
         }
         else if(marks>=80 && marks<=89){
            console.log("Grade B");
         } 
         else if(marks>=70 && marks<=79){
            console.log("Grade C");
         }
      
         else{
         console.log("FAIL")
          }
         
      //16.Implement a switch statement to check a variable day = ”Monday” and
      //log ”Start of the week” for Monday, ”Midweek” for Wednesday, and
      //”Weekend” for Saturday or Sunday.

      let day = "wednesday";

      switch (day) {
         case "monday": console.log("start of the week"); break;
         case "tuesday": console.log("second of the week"); break;
         case "wednesday": console.log("mid of the week");break;
         case "thursday": console.log("fourth of the week"); break;
         case "friday": console.log(" day befor weekend"); break;
         case "saturday": console.log("WeekEnd"); break;
         case "sunday": console.log("WeekEnd"); break;
      
      }

      //17. Write a for loop to print all even numbers from 1 to 10.

      for (let az = 1; az <= 10; az++)
          {
            if  (az%2==0){
               console.log(az);
          }
          }
      //18. Create a while loop to print numbers from 5 down to 1.
         
          let smg =5;
      while (smg>=0){
         console.log(smg);smg--
      }
   
      //19. Use a do-while loop to log numbers from 10 to 15.

         let AR = 10;
         do{
            console.log(AR); AR++
         }
         while(AR<=15);

      //20. Write a for-of loop to iterate over an array [10, 20, 30, 40] and log
      //each element multiplied by 2

         let GK =[10,20,30,40,50]

        for (let sk of GK) {
         console.log(sk);
         
        }

      //21. Use a for-in loop to iterate over an object {name: ”John”, age: 25,
      //city: ”New York”}and log each property value.

      let obj = {
         name: "john",
         age: "25",
         city:"new york"
      }

      for (let answer in obj) {
         console.log(obj[answer]);
            
         }
         
      console.clear();

      //Named Function

      function sayHi() {
         console.log("Hi Everyone!")
      }
      
      sayHi();

      // Anonymous Function

      let addNumbers = function (a,b) {
         console.log(a*b)
      }

      addNumbers(20,10);

      //Arrow Function

      let doubleNum = 20;

      let doubled = (twoTimes)=>{
         return twoTimes**2
      }
      let Output1 = doubled(doubleNum);

      console.log(Output1);

      //4)

      let name1 = "Ajeeth A"

      let guest =(greet)=>{
         return `Welcome ${greet}`
      }
      
      let Guest1 = guest(name1);

      console.log(Guest1)

      //5)

      let name2="sachin"
      let name3="tendulkar"
       

      function greetwithAge(a,b=20) {
         console.log(`${a} is ${b}years old`)  
      }
      

      greetwithAge(name2,25);
      greetwithAge(name3)

      

      //8 Write a named function print Message that logs ”JavaScript is fun!”
      // and call it before its declaration.


      Shoutout();

     function Shoutout () {
      console.log( "JavaScript is fun!")
     }

     //9) Create a higher-order function doMath that takes a callback function and
     //  two numbers, applies the callback to the numbers, and logs the result.

   function twenty(break1,a,b,c) {
      console.log(b+20, a*20,c*20)
      break1(5,6)
   }
   function square(a,b) {
      console.log(a*b,b*10);
      
   }
   
   twenty(square,5,10,15)

   //10) Write a callback function subtract Numbers that subtracts two numbers
   // and use it with a higher-order function calculate.

   let aj =200;
   let bj =20

   function sub(a,b,loss) {
      console.log(a-b)
      loss(10,8)
      
   }
   function balance(a,b) {
      console.log(a*b);
   }
   sub(200,20,balance)
   // sub(aj,bj,balance)

    //What is the purpose of currying in the add3 function,and how does it differ
   // from the add2 function in terms of function invocation?

   //example:-

    function add2(x,y,z) {
       console.log(x*y/z)    // here we are calling a single function with 3 arguments 
    }

    add2(5,10,2)
      
    function add3(x) {
       return function (y) {
         return function (z) {
             console.log(x*y/z) 
          }                      //here we are calling the parent func with the two child function's
                                 // by providing seperate arguments for the each functions 
         }
      
    }
   add3(5)(10)(2)

   //Explain how the Immediately Invoked Function Expression( IIFE)works in
   // JavaScript, and provide an example of its practical use case.

   // (function(a,b){
   //    console.log(a**b)   commented for it should be only perform in the begining 
   // })
   
   //(5,6)

   //here we should not use variable name for this function, since invokes automatically fetch the 
   //arguments and perform.

      

  // What is the role of the yield keyword in a generator function, and how
  // does it affect the behavior of the genFun function?  
  
  //example:-

  function*Generate(){
   yield "Dragonball"
   yield "Heman"
   yield "Avathar"
   yield "Ben10"
  }
  let data = Generate()

  console.log(data.next().value)
  console.log(data.next().value)
  console.log(data.next().value)
  console.log(data.next().value)
  console.log(data.next().value);

  //solu: here Yield plays a vital role to store the next available data in the variable
 
  
//How would you convert the curried add3 function into an uncurried function, and 
// what would be the benefit of doing so?

//curried function;-
  
   // function add3(x) {
   //     return function (y) {
   //       return function (z) {
   //           console.log(x*y/z) 
   //        }                      
   //       }
      
   //  }
  // add3(5)(10)(2)

  //uncurried function;-

  let add4 = (a,b,c)=>{
   return a*b/c
  }
      
  let calculate= add4(5,10,2)

  console.log(calculate);

  // in uncurried func it is simple to assign a arguments to a params since it s a single function


  // In the fruits array,why is fruits [1] undefined, and how can you handle such gaps in an array?
  
  let fruits =["apple",,"orange","grapes"];
  
  console.log(fruits[1]);

  // here there is an empty space found in the array  
 
  //Describe the difference between homogeneous and heterogeneous data structures, 
  // using the fruits array as an example.
  
  let fruits1 =["apple","orange","grapes"];


  // homogeneous - in array we can store a same datatype entirely hence this is called homogeneous
    
     let fruits2 =["apple","orange","grapes",{ename:"aj"},["work","FED"] ] ;  

      // console.log(fruits2[3]);
  // heterogeneous - in array we can store a different datatype, hence this is called heterogeneous    

   
   //How can you access the nested malayalam property in the userProfile . levelOfLaunguage  object, 
   //and what does it return?

   
   let userprofile ={
      EmpName: "Thanos",
      age: "29",
      languagesknown :["tamil","English","malayalam"],
   
      levelOfLaunguage : {
         tamil:"Expert",
         English:"Medium",
         malayalam: "Average"
      },
   }

      console.log(userprofile.levelOfLaunguage.malayalam); // it returns the value side of the selected key
      
      
      //What happens when you call storeGen.next() after all values in the genFun generator have been yielded

      //solu:- it becomes undefined,when you call storeGen.next()after all values in the funtion was called,   


      //Using the user Profile object,demonstrate how to invoke the complete Training method 
      // and explain its output.

      let userprofile1 ={
      EmpName: "Thanos",
      age: "29",
      languagesknown :["tamil","English","malayalam"],
   
      levelOfLaunguage : {
         tamil:"Expert",
         English:"Medium",
         malayalam: "Average"
      },
      completeTrainingmethod : function () {
         console.log("Certified")
      }
      }

      userprofile1.completeTrainingmethod();

        console.clear();

      //1: What is the output of console.log(Math.abs(-450))?

      let a1= -450;

      console.log(Math.abs(a1)); //output = 450
      

      // If let num =-72.5, what will Math.abs(num) return?

      // let a2=(a)=> {
      //   return Math.abs(a)
      // }

      // let num = a2(-72.5)

      // console.log(num);
     
      let num = -72.5;

      console.log (Math.abs(num)) // output = 72.5

      //What does Math.sign(-1234) return?

      let a3 = -1234

      console.log(Math.sign(a3));

      //Determine the output of console.log(Math.sign(0)) and explain what it 
      //indicates.

      let a4= 0;
      console.log(Math.sign(a4));

      // math.sign method returns the value to least whether it is positive r negative except Zero.
      
      //Calculate the square root of 625 using Math.sqrt()

      let a5 = 625;

      console.log(Math.sqrt(a5))  // output = 25

      //What is the result of Math.sqrt(50) rounded to two decimal places?

      let a6 = 50

      console.log(Math.sqrt(a6).toFixed(2))  // output = 7.07

      //Find the cube root of 27 using Math.cbrt()

      let a7 = 27

      console.log(Math.cbrt(a7)) // output = 3

      //What will Math.cbrt(-64) return?

      let a8 = -64

      console.log(Math.cbrt(a8)) //output = -4


      //Compute 4^5 using Math.pow().

      let a9 = 4;

      console.log(Math.pow(a9,5)) // output = 1024

      //Write a statement to calculate 7^2 using Math.pow()

      let b1 = 49

  
      if (b1== Math.pow(7,2)){
        console.log("success")
      } else{
        console.log("failed")
      }
      
      //Given the array let arr = [45, 12, 89, 3, 67],
      //what is the output of Math.min(...arr)?

      let arr1 =[45,12,89,3,67]

      console.log(Math.min(...arr1)); //output=3

      //Using the samearray [45, 12, 89, 3, 67], 
      //find the maximum value with Math.max()

      console.log(Math.max(...arr1)); // output = 89

      //Write a statement to generate a random number 
      //between 0 and 50 using Math.random()

      console.log(Math.random()*50)

      // How would you generate a random integer between 1 and 10 using Math.random()
      // and Math.floor()?

      console.log(Math.floor(Math.random()*10))

      // If let val = 6.789, what is the output of val.toFixed(2)?

      let Val= 6.789

      console.log(Val.toFixed(2)); //output 6.79

      // For let num = 3.14159, what does Math.ceil(num) return?

      let num5 = 3.14159

      console.log(Math.ceil(num5)); //output=4

      // Using let num = 8.76, what is the result of Math.floor(num)?

      let num6 = 8.76

      console.log(Math.floor(num6)); //output = 8

      //What will Math.round(4.49) output?

      console.log(Math.round(4.49)) // ouput = 4
      
      
      //If let num = 9.999, what does Math.trunc(num) return?

      let num7 = 9.999
      console.log(Math.trunc(9.999)) // ouput = 9

      // Create a Date object for the current date and time, and write the statement to
      // display the full year using getFullYear()

      let today = new Date()

      console.log(today);
      console.log(today.getFullYear());
      console.log(today.getDate(),today.getHours());
      console.log(today.getHours(),today.getMinutes(),today.getMilliseconds());
      console.log(today.getMonth())

      //Write a JavaScript statement to format the current date as DD/MMM/YYYY, where
      // DD is the day, MMM is the three-letter month abbreviation (e.g., Jan, Feb), and YYYY
      // is the year. Use an array of month names like in the provided code.

      
      let arr3 = ["jan","feb","mar","apr","may","june","july","aug","sep","oct"
       ,"nov","dec"]
      
      let value = `0${today.getDate()}/${arr3[today.getMonth()]}/${today.getFullYear()}`;

      console.log(value)
